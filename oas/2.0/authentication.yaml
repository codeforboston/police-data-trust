openapi: "3.0.3"
info:
  title: "Authentication"
  description: "API Description"
  version: "0.7.0"
servers:
  - url: "http://dev.nationalpolicedata.org/api/v1"
    description: "Development environment"
  - url: "https://dev.nationalpolicedata.org/api/v1"
    description: "Staging environment"
  - url: "https://api.nationalpolicedata.org"
    description: "Production environment"
x-readme:
  explorer-enabled: true
  proxy-enabled: true
  samples-enabled: true
tags:
  - name: "Authentication"
    description: "API for authenticating and creating user accounts."
paths:
  /auth/register:
    post:
      summary: "Register New Account"
      operationId: "register"
      description: "Create a new user account."
      tags: 
        -  Authentication
      requestBody: 
        content: 
          application/json: 
            schema: 
              $ref: "#/components/schemas/RegisterRequest"
      responses:
        "200":
          description: "Logs in and returns the created user object."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RegisterResponse"
        "400":
          $ref: '../common/error.yaml#/components/responses/validationError'
        "409":
          $ref: '../common/error.yaml#/components/responses/conflictError'
  /auth/login:
    post:
      summary: "Log In"
      operationId: "login"
      description: "Log in to an existing user account."
      tags: 
        -  Authentication
      requestBody: 
        content: 
          application/json: 
            schema: 
              $ref: "#/components/schemas/LoginRequest"
      responses:
        '200':
          description: 'Returns JWT that may be used to authenticate future API requests.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          $ref: '../common/error.yaml#/components/responses/validationError'
  /auth/refresh:
    post:
      security:
        - bearerAuth: []
      summary: "Refresh Access Token"
      operationId: "refreshToken"
      description: >
        Refreshes the current access token to reset the expiration date. This
        endpoint requires a valid refresh token to be used as the bearer token
        to authenticate the request.
      tags: 
        -  Authentication
      responses: 
        '200':
          description: >
            Returns the updated employment records. The response also includes
            information about any records that could not be added.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefreshResponse'
        '401':
          $ref: '../common/error.yaml#/components/responses/unauthorizedError'
  /auth/logout:
    post:
      security:
        - bearerAuth: []
      summary: "Log Out"
      operationId: "logout"
      description: "Revokes the access token used to autheticate this request."
      tags: 
        -  Authentication
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LogoutResponse"
        '401':
          $ref: '../common/error.yaml#/components/responses/unauthorizedError'
  /auth/whoami:
    get:
      security:
        - bearerAuth: []
      summary: "Current User"
      operationId: "whoami"
      description: "Returns the user that matches the access token used to authenticate the request."
      tags: 
        -  Authentication
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CurrentUser"
        '401':
          $ref: '../common/error.yaml#/components/responses/unauthorizedError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RegisterRequest:
      type: "object"
      properties:
        email:
          type: "string"
          description: "The user's email address."
        password:
          type: "string"
          description: "The user's desired password."
        first_name:
          type: "string"
          description: "The user's first name."
        last_name:
          type: "string"
          description: "The user's last name."
        phone_number:
          type: "string"
          description: "The user's phone number."
      required: 
        - email
        - first_name
        - last_name
        - password
        - phone_number
    RegisterResponse:
      type: "object"
      properties:
        msg:
          type: string
          description: information about the registration action.
        access_token:
          type: string
          description: The JWT that can be used to authenticate API requests on behalf of the user.
        refresh_token:
          type: string
          description: The JWT that can be used to obtain a new access token.
        expires_in:
          type: integer
          description: The number of seconds until the refresh token expires.
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          description: The user's email address.
        password:
          type: string
          description: The user's password.
      required: 
        - email
        - password
    LoginResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The JWT that can be used to authenticate API requests on behalf of the user.
        refresh_token:
          type: string
          description: The JWT that can be used to obtain a new access token.
        expires_in:
          type: integer
          description: The number of seconds until the refresh token expires.
    RefreshResponse:
      type: object
      properties:
        access_token:
          type: string
          description: The JWT that can be used to authenticate API requests on behalf of the user.
        expires_in:
          type: integer
          description: The number of seconds until the access token expires.
    CurrentUser:
      type: object
      properties:
        first_name:
          type: string
          description: The user's first name.
        last_name:
          type: string
          description: The user's last name.
    LogoutResponse:
      type: object
      properties:
        msg:
          type: string
          description: A report of the logout action.
        